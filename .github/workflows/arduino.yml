# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  strategy:
     matrix:
        # The matrix will produce one job for each configuration
        # parameter of type arduino-platform
        arduino-platform: ["arduino:avr"]
        
        # I use only uno in CI in the moment
        include:
        - arduino-platform: "arduino:avr"
          fqbn: "arduino:avr:uno"
    
  # This is the platform GitHub will use to run our workflow, we
    # pick Windows for no particular reason.
        runs-on: windows-latest
 
    # This is the list of steps this job will run.
     steps:
      # First of all, we clone the repo using the checkout action.
      - name: Checkout
        uses: actions/checkout@master
 
      # We use the arduino/setup-arduino-cli action to install and
      # configure the Arduino CLI on the system.
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1.0.0
 
      # We then install the platform, which one will be determined
      # dynamically by the build matrix.
      - name: Install platform
        run: |
          arduino-cli core update-index
          arduino-cli core install ${{ matrix.arduino-platform }}
 
      # Finally, we compile the sketch, using the FQBN that was set
      # in the build matrix.
      - name: Compile Sketch
        run: arduino-cli compile --fqbn ${{ matrix.fqbn }} ./blink
